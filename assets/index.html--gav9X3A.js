import{_ as s,c as a,a as e,o as t}from"./app-DQoAKara.js";const p={};function o(i,n){return t(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="ðŸ§©-use-pages-context" tabindex="-1"><a class="header-anchor" href="#ðŸ§©-use-pages-context"><span>ðŸ§© Use Pages Context</span></a></h1><p>With new page models we lost the ability to write view functions. Then we are giving you a way to inject more context inside a page in a simple manner.</p><p>You are going to apply the registration approach.</p><p>The game rules are simple, first of all:</p><ul><li>Make a file called <code>template_context.py</code> in your app directory. Camomilla is built to autodiscover those files.</li></ul><p>Inside the file you can provide context with the register function in 2 different ways.</p><h3 id="template-based-registration" tabindex="-1"><a class="header-anchor" href="#template-based-registration"><span>Template based registration</span></a></h3><p>To register some additional context to a specific template wite in the template_context.py file the following:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>templates_context<span class="token punctuation">.</span>rendering <span class="token keyword">import</span> register</span>
<span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>models <span class="token keyword">import</span> Media</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@register</span><span class="token punctuation">(</span><span class="token string">&quot;website/home.html&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">home_page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My fantastic title&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My wanderfull content&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;media_gallery&quot;</span><span class="token punctuation">:</span> Media<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="model-based-registration" tabindex="-1"><a class="header-anchor" href="#model-based-registration"><span>Model based registration</span></a></h3><p>To register some additional context to a specific page wite in the template_context.py file the following:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>templates_context<span class="token punctuation">.</span>rendering <span class="token keyword">import</span> register</span>
<span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>models <span class="token keyword">import</span> Media<span class="token punctuation">,</span> Page</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@register</span><span class="token punctuation">(</span>page_model<span class="token operator">=</span>Page<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">home_page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My fantastic title&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My wanderfull content&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;media_gallery&quot;</span><span class="token punctuation">:</span> Media<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="additional-kwargs" tabindex="-1"><a class="header-anchor" href="#additional-kwargs"><span>Additional **kwargs</span></a></h3><p>You can access to two usefull kwargs in template_context functions. The request kwarg contains the django http request. The super_ctx kwarg contains the context coming from upper functions or camomilla default context</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>templates_context<span class="token punctuation">.</span>rendering <span class="token keyword">import</span> register</span>
<span class="line"><span class="token keyword">from</span> camomilla<span class="token punctuation">.</span>models <span class="token keyword">import</span> Media<span class="token punctuation">,</span> Page</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@register</span><span class="token punctuation">(</span>page_model<span class="token operator">=</span>Page<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">home_page</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> super_ctx<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># your custom code can use request or super_ctx to provide more precise context</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My fantastic title&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;My wanderfull content&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;media_gallery&quot;</span><span class="token punctuation">:</span> Media<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15)])])}const c=s(p,[["render",o]]),u=JSON.parse('{"path":"/How%20to/Use%20Pages%20Context/","title":"ðŸ§© Use Pages Context","lang":"en-US","frontmatter":{},"git":{"updatedTime":1696068072000,"contributors":[{"name":"bnznamco","username":"bnznamco","email":"gabriele.baldi.01@gmail.com","commits":2,"url":"https://github.com/bnznamco"}],"changelog":[{"hash":"9ecbb4ead9f63c731f463aabd97a7f758f2a537e","time":1696068072000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update templates_context docs"},{"hash":"9df236a99a62a29e33f340e1443ab66b0d563455","time":1694198106000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update docs"}]},"filePathRelative":"How to/Use Pages Context/README.md"}');export{c as comp,u as data};
