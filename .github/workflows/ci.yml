name: üß™ Test and Coverage

on:
  workflow_dispatch:
  pull_request:
    branches: [ master, next ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version: ["3.2", "4.2", "5.1"]
        exclude:
          - python-version: 3.9 
            django-version: 5.1
          - python-version: 3.11 
            django-version: 3.2
          - python-version: 3.12 
            django-version: 3.2
          - python-version: 3.13
            django-version: 3.2
          - python-version: 3.13
            django-version: 4.2
    name: ü¶† Test on Python ${{ matrix.python-version }} with Django ${{ matrix.django-version }}

    steps:
    - uses: actions/checkout@v5
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: ‚ôªÔ∏è Cache uv
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.django-version }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.django-version }}-
          uv-${{ runner.os }}-${{ matrix.python-version }}
          uv-${{ runner.os }}
    - name: üì• Sync dependencies (Django ${{ matrix.django-version }})
      run: |
        uv add --dev "Django==${{ matrix.django-version }}"
        uv sync --dev
        uv remove Django || true
    - name: üî¨ Test with pytest and calculate coverage 
      run: make test
    - name: üì¶ Minimize uv cache
      run: uv cache prune --ci
    - name: ü©∫ Upload coverage to codecov.io
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.13' && matrix.django-version == '5.1' # Only upload coverage once
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
