name: 🧪 Test and Coverage

on:
  workflow_dispatch:
  pull_request:
    branches: [ master, next ]

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        django-version: ["Django>=4.2,<5.0", "Django>=5.1,<5.2", "Django>=5.2,<5.3"]
        exclude:
          - python-version: 3.13
            django-version: "Django>=4.2,<5.0"
    name: 🦠 Test on Python ${{ matrix.python-version }} with ${{ matrix.django-version }}

    steps:
    - uses: actions/checkout@v5
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: ♻️ Cache uv
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ strategy.job-index }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          uv-${{ strategy.job-index }}-
          uv-${{ strategy.job-index }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
    - name: 📥 Sync dependencies (Django ${{ matrix.django-version }})
      run: |
        uv add --dev "${{ matrix.django-version }}"
        uv sync --dev
    - name: 🔬 Test with pytest and calculate coverage 
      run: make test
    - name: 📦 Minimize uv cache
      run: uv cache prune --ci
    - name: 📦 Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ github.job }}-${{ strategy.job-index }}
        path: .coverage
        include-hidden-files: true

  coverage:
    needs:
      - test-sqlite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: 📥 Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: ⛙ Combine coverage data
        run: |
          coverage combine

      - name: 📊 Generate coverage report
        run: |
          coverage report -m --skip-covered --skip-empty | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
          coverage html --skip-covered --skip-empty

      - name: 📤 Upload HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_html_report
          include-hidden-files: true

      - name: 🩺 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
