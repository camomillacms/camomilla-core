"""
Django settings for camomilla_example project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
import sys, os


# Allow using PyMySQL as a drop-in for MySQLdb (mysqlclient) when the native
# driver isn't installed. This keeps MySQL tests working without requiring
# compiled dependencies locally. If mysqlclient is installed, this shim is
# harmless because pymysql.install_as_MySQLdb simply provides the module name.
#
# UNCOMMENT THE FOLLOWING LINES IF YOU WANT TO USE PyMySQL
# try:
#     import pymysql  # type: ignore

#     pymysql.install_as_MySQLdb()
# except Exception:
#     pass

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-m2=e_)m)%$ks2d*txswt-b@*q1fns478smeo0u%=1$w)r38^kj"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TESTING = "test" in sys.argv or "PYTEST_VERSION" in os.environ

ENABLE_DEBUG_TOOLBAR = DEBUG and not TESTING

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "camomilla",
    "camomilla.theme",
    "structured",
    "example.website",
    "djsuperadmin",
    "modeltranslation",
    "rest_framework",
    "rest_framework.authtoken",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.sitemaps",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "example.camomilla_example.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "example.camomilla_example.wsgi.application"


# Database
# ----------------------------------------------------------------------------------
# Allow selecting a different database backend for tests / local dev via env vars.
# Supported backends (DB_BACKEND): sqlite (default), postgres, mysql (or mariadb).
# Other vars: DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT.
# This MUST happen before Django loads apps (so here in settings module) – mutating
# settings.DATABASES later (e.g. in pytest fixtures) won't swap the already created
# connection wrapper.

DB_BACKEND = os.environ.get("CAMOMILLA_TEST_DB_BACKEND", "sqlite").lower()
DB_NAME = os.environ.get("CAMOMILLA_TEST_DB_NAME", "test_camomilla")
DB_USER = os.environ.get("CAMOMILLA_TEST_DB_USER", "camomilla")
DB_PASSWORD = os.environ.get("CAMOMILLA_TEST_DB_PASSWORD", "camomilla")
DB_HOST = os.environ.get("CAMOMILLA_TEST_DB_HOST", "127.0.0.1")
DB_PORT = os.environ.get(
    "CAMOMILLA_TEST_DB_PORT"
)  # optional – driver default if missing

if DB_BACKEND in ("postgres", "postgresql", "psql"):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": DB_NAME,
            "USER": DB_USER,
            "PASSWORD": DB_PASSWORD,
            "HOST": DB_HOST,
            **({"PORT": DB_PORT} if DB_PORT else {}),
        }
    }
elif DB_BACKEND in ("mysql", "mariadb"):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": DB_NAME,
            "USER": DB_USER,
            "PASSWORD": DB_PASSWORD,
            "HOST": DB_HOST,
            **({"PORT": DB_PORT} if DB_PORT else {}),
            "OPTIONS": {
                "init_command": "SET time_zone='+00:00'",
                "charset": "utf8mb4",
                "use_unicode": True,
            },
        }
    }
else:  # sqlite fallback
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "test_db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en"

LANGUAGES = (
    ("it", _("Italian")),
    ("en", _("English")),
)

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


CSRF_TRUSTED_ORIGINS = ["http://localhost:3000", "http://localhost:8000"]

MEDIA_ROOT = Path(BASE_DIR / "media")
MEDIA_URL = "/media/"


REST_FRAMEWORK = {
    "DEFAULT_PARSER_CLASSES": (
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "camomilla.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ],
}

CAMOMILLA = {
    "RENDER": {
        "REGISTERED_TEMPLATES_APPS": [
            "website",
        ],
    },
    "INTEGRATIONS": {
        "ASTRO": {
            "ENABLE": True,
            "URL": "http://localhost:4321",
        }
    },
}


if ENABLE_DEBUG_TOOLBAR:
    INSTALLED_APPS += ["debug_toolbar"]
    MIDDLEWARE = ["debug_toolbar.middleware.DebugToolbarMiddleware"] + MIDDLEWARE
    INTERNAL_IPS = [
        "127.0.0.1",
        "localhost",
    ]
